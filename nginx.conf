user www-data;
worker_processes auto;
pid /run/nginx.pid;


events {
    worker_connections 768;
}

http {

    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response

        # for UNIX domain socket setups
        #server unix:/tmp/gunicorn.sock fail_timeout=0;

        # for a TCP configuration
        server 127.0.0.1:8000 fail_timeout=0;
      }

    upstream mailroom_server {
      server 127.0.0.1:8090 fail_timeout=60;
    }

    upstream courier_server {
      server 127.0.0.1:8080 fail_timeout=60;
    }

    upstream whatsapp_wrapper {
      server 127.0.0.1:8060 fail_timeout=60;
    }

    upstream team_inbox_server {
      server 127.0.0.1:8065 fail_timeout=60;
    }

    upstream web_widget_server {
      server 127.0.0.1:8050 fail_timeout=60;
    }

    upstream collect_api_whatsapp {
      server 127.0.0.1:8040 fail_timeout=60;
    }

    upstream client_customized_api {
      server 127.0.0.1:8030 fail_timeout=60;
    }

    server {
        # use 'listen 80 deferred;' for Linux
        # use 'listen 80 accept_filter=httpready;' for FreeBSD
        listen 80;
        client_max_body_size 4G;

        # set the correct host(s) for your site
        server_name localhost;

        #location = /favicon.ico { access_log off; log_not_found off; }

        keepalive_timeout 5;

        location / {
          # checks for static file, if not found proxy to app
          try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $http_host;
          # we don't want nginx trying to do something clever with
          # redirects, we set the Host: header above already.
          proxy_redirect off;
          proxy_read_timeout 900;
          proxy_pass http://127.0.0.1:8000;
        }

        location ^~ /sitestatic {
            alias /path/to/thumbcrowd/sitestatic;
        }

        location ^~ /sitestatic/web_widgets {
            alias /path/to/thumbcrowd/static/web_widgets;
       }

       location ^~ /sitestatic/bots {
            alias /path/to/thumbcrowd/static/bots;
       }

       location ^~ /sitestatic/msg_attachments {
            alias /path/to/thumbcrowd/static/msg_attachments;
       }

       location ^~ /media/attachments {
            alias /path/to/thumbcrowd/media/attachments;
       }

       location ^~ /web_widget.js {
            alias /path/to/web_widget/lib/index.js;
       }

	   location ^~ /attachment_received {
            alias /home/basit/projects/unQa/flask_services/temp_images;
       }

        # all courier URLs go to courier
        location ~ /c/ {
          proxy_set_header Host $http_host;
          proxy_pass http://courier_server;
          break;
          }

        # all Mailroom URLs go to Mailroom
        location ~ /mr/ {
          proxy_set_header Host $http_host;
          proxy_pass http://mailroom_server;
          break;
        }

        # Flask Socket-IO for web widget
        location /socket.io {
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_http_version 1.1;
          proxy_buffering off;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_pass http://web_widget_server/socket.io;
        }

        # Flask REST API web widget
        location /web_widget/send {
          proxy_set_header Host $http_host;
          proxy_pass http://web_widget_server/send;
        }

        # Twilio Whatsapp Wrapper
        location /whatsapp_wrapper {
          proxy_set_header Host $http_host;
          proxy_pass http://whatsapp_wrapper;
          break;
        }

        # Collect API Whatsapp Wrapper
        location /collect_api_whatsapp/receive {
          proxy_set_header Host $http_host;
          proxy_pass http://collect_api_whatsapp/receive;
          break;
        }

        # Client Customized Api
        location /customized_api {
          proxy_set_header Host $http_host;
          proxy_pass http://client_customized_api;
          break;
        }

        # Flask Socket-IO for team inbox socket app
        location /team_inbox_app/socket.io {
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_http_version 1.1;
          proxy_buffering off;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_pass http://team_inbox_server/socket.io;
        }

        root /path/to/thumbcrowd-ai/dist;
        location /ai {
            try_files $uri /index.html;
        }
    }
}